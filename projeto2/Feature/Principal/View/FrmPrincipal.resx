<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnProdutos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>